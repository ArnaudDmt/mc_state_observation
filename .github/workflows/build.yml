name: CI of mc_state_observation

on:
  push:
    paths-ignore:
      # Changes to those files don't mandate running CI
      - ".gitignore"
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  clang-format:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install clang-format-10
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install clang-format-10
    - name: Run clang-format-check
      run: |
        ./.clang-format-check.sh
  build:
    needs: clang-format
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        build-type: [RelWithDebInfo]
        compiler: [gcc, clang]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install dependencies
      uses: jrl-umi3218/github-actions/install-dependencies@master
      with:
        compiler: ${{ matrix.compiler }}
        build-type: ${{ matrix.build-type }}
        ubuntu: |
          apt: libltdl-dev libboost-all-dev doxygen doxygen-latex libmc-rtc-dev libgram-savitzky-golay-dev
          apt-mirrors:
            mc-rtc:
              cloudsmith: mc-rtc/head
    - name: Setup ROS
      run: |
        set -x
        set -e
        if [ "${{ matrix.os }}" = "ubuntu-18.04" ]
        then
          export ROS_DISTRO="melodic"
        else
          export ROS_DISTRO="noetic"
        fi
        sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
        sudo apt-get update -qq
        sudo apt-get -qq remove libomp5-9 || true
        sudo apt-get install -qq ros-${ROS_DISTRO}-mc-rtc-plugin ros-${ROS_DISTRO}-tf2-eigen
        . /opt/ros/${ROS_DISTRO}/setup.bash
        echo "ROS_DISTRO=${ROS_DISTRO}" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}" >> $GITHUB_ENV
        echo "ROS_MASTER_URI=${ROS_MASTER_URI}" >> $GITHUB_ENV
        echo "ROS_PACKAGE_PATH=${ROS_PACKAGE_PATH}" >> $GITHUB_ENV
        echo "PYTHONPATH=${PYTHONPATH}" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}" >> $GITHUB_ENV
        echo "PATH=${PATH}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" >> $GITHUB_ENV
    - name: Build and test
      uses: jrl-umi3218/github-actions/build-cmake-project@master
      with:
        compiler: ${{ matrix.compiler }}
        build-type: ${{ matrix.build-type }}
